# ========================================
# CrediLinq Content Agent - Environment Configuration
# ========================================
# Copy this file to .env and replace with your actual values
# NEVER commit .env files to version control!

# ========================================  
# APPLICATION SETTINGS
# ========================================
# Application environment (development, staging, production)
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG=true

# API Configuration
API_TITLE="CrediLinq Content Agent API"
API_VERSION="4.0.0"
API_DESCRIPTION="AI-powered content management platform"

# Server Configuration
HOST=0.0.0.0
PORT=8000

# ========================================
# AI SERVICES - REQUIRED
# ========================================
# OpenAI API Configuration (REQUIRED for content generation)
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_TEMPERATURE=0.7
OPENAI_MAX_TOKENS=4000

# ========================================
# DATABASE CONFIGURATION - REQUIRED
# ========================================
# Supabase Configuration (REQUIRED for data persistence)
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_KEY=your-supabase-anon-key-here
SUPABASE_DB_URL=postgresql://postgres:your-password@db.your-project-id.supabase.co:5432/postgres

# Alternative Database URLs (for different environments)
DATABASE_URL=postgresql://postgres:your-password@db.your-project-id.supabase.co:5432/postgres
DATABASE_URL_DIRECT=postgresql://postgres:your-password@db.your-project-id.supabase.co:5432/postgres

# Database Connection Settings
DB_CONNECTION_TIMEOUT=30
DB_MAX_RETRIES=3
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# ========================================
# STORAGE CONFIGURATION
# ========================================
# Supabase Storage Bucket
SUPABASE_STORAGE_BUCKET=documents

# File Upload Settings
MAX_FILE_SIZE_MB=10
ALLOWED_FILE_TYPES=txt,pdf,docx,md

# ========================================
# AI SERVICES - OPTIONAL
# ========================================
# Google AI API (Optional - for Gemini models)
GOOGLE_API_KEY=your-google-api-key-here

# Tavily API (Optional - for web search functionality)
TAVILY_API_KEY=your-tavily-api-key-here

# ========================================
# SECURITY SETTINGS
# ========================================
# CORS Configuration (comma-separated list)
CORS_ORIGINS=http://localhost:5173,http://127.0.0.1:5173,https://your-domain.com

# Session and Security
SECRET_KEY=your-secret-key-for-sessions-change-this-in-production
JWT_SECRET=your-jwt-secret-change-this-in-production
JWT_EXPIRATION_HOURS=24

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=100

# ========================================
# PERFORMANCE SETTINGS
# ========================================
# API Timeouts (in seconds)
API_TIMEOUT=120
REQUEST_TIMEOUT=30

# Caching Settings
CACHE_TTL_SECONDS=300
ENABLE_CACHE=true

# Agent Performance
AGENT_TIMEOUT_SECONDS=300
MAX_CONCURRENT_AGENTS=5

# ========================================
# MONITORING & LOGGING
# ========================================
# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=detailed
LOG_FILE_PATH=logs/application.log

# Analytics and Monitoring
ENABLE_ANALYTICS=true
ENABLE_PERFORMANCE_TRACKING=true

# External Monitoring (Optional)
SENTRY_DSN=your-sentry-dsn-here
DATADOG_API_KEY=your-datadog-api-key-here

# ========================================
# DEVELOPMENT SETTINGS
# ========================================
# Development Tools
ENABLE_DEBUG_TOOLBAR=true
ENABLE_PROFILER=false

# Testing
TEST_DATABASE_URL=postgresql://postgres:test-password@localhost:5432/test_db

# ========================================
# PRODUCTION OVERRIDES
# ========================================
# Override these in production environments
# ENVIRONMENT=production
# DEBUG=false
# LOG_LEVEL=WARNING
# ENABLE_DEBUG_TOOLBAR=false

# ========================================
# SECURITY NOTES
# ========================================
# 1. Never commit actual API keys to version control
# 2. Use strong, unique passwords for database connections
# 3. Rotate API keys regularly (every 90 days recommended)
# 4. Use environment-specific keys for dev/staging/production
# 5. Enable 2FA on all service accounts
# 6. Monitor API usage and set up alerts for unusual activity
# 7. Use least-privilege access for all service accounts 